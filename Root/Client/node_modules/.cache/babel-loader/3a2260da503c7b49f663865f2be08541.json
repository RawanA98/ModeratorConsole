{"ast":null,"code":"var _jsxFileName = \"/home/rawan/Desktop/DailyMotion/moderation/src/Components/ActionsList.tsx\";\nimport React from \"react\";\nimport { GET_USERS } from \"../App\";\nimport { useState } from \"react\";\nimport MutationButton from './ActionsButton';\nimport DifferenButton from './DifferentButton';\nimport { gql, useMutation } from \"@apollo/client\";\nconst MediaCensorMutation = gql`\n    mutation Mutation($input: MediaInput!) {\n        mediaCensor(input: $input) {\n            status\n        }\n    }\n`;\nconst MediaValidMutation = gql`\n    mutation Mutation($input: MediaInput!) {\n        mediaValid(input: $input) {\n            status\n        }\n    }\n`;\nexport default function ActionsList({\n  clientID,\n  refetch\n}) {\n  const [status, setStatus] = useState('');\n  const [reason, setReason] = useState('');\n  const [mutationCensor] = useMutation(MediaCensorMutation, {\n    variables: {\n      input: {\n        id: clientID,\n        reason: reason\n      }\n    },\n    refetchQueries: [{\n      query: GET_USERS\n    }]\n  });\n  const [mutationValid] = useMutation(MediaValidMutation, {\n    variables: {\n      input: {\n        id: clientID,\n        reason: reason\n      }\n    },\n    refetchQueries: [{\n      query: GET_USERS\n    }],\n    onCompleted: () => {\n      setStatus('');\n    }\n  });\n  function handleChanges(value) {\n    setReason('');\n    setStatus(value);\n  }\n  console.log('reason', reason);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, status), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    required: true,\n    value: reason,\n    placeholder: \"Reason\",\n    onChange: e => setReason(e.target.value),\n    \"aria-label\": \"default input example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MutationButton, {\n    mutationFunction: mutationCensor,\n    buttonText: \"Censor\",\n    handleChanges: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MutationButton, {\n    mutationFunction: mutationValid,\n    buttonText: \"Valid\",\n    handleChanges: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DifferenButton, {\n    refetch: refetch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"names":["React","GET_USERS","useState","MutationButton","DifferenButton","gql","useMutation","MediaCensorMutation","MediaValidMutation","ActionsList","clientID","refetch","status","setStatus","reason","setReason","mutationCensor","variables","input","id","refetchQueries","query","mutationValid","onCompleted","handleChanges","value","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","type","required","placeholder","onChange","e","target","mutationFunction","buttonText"],"sources":["/home/rawan/Desktop/DailyMotion/moderation/src/Components/ActionsList.tsx"],"sourcesContent":["\nimport React from \"react\";\nimport { GET_USERS } from \"../App\";\nimport { useState } from \"react\";\nimport MutationButton from './ActionsButton';\nimport DifferenButton from './DifferentButton';\nimport { gql, useMutation } from \"@apollo/client\";\n\ninterface ActionsListProps {\n    clientID : number;\n    refetch: any;\n}\nconst MediaCensorMutation = gql`\n    mutation Mutation($input: MediaInput!) {\n        mediaCensor(input: $input) {\n            status\n        }\n    }\n`\nconst MediaValidMutation = gql`\n    mutation Mutation($input: MediaInput!) {\n        mediaValid(input: $input) {\n            status\n        }\n    }\n`\n\nexport default function ActionsList({clientID,refetch}: ActionsListProps) {\n    const [status, setStatus] = useState('');\n    const [reason, setReason] = useState<string>('');\n\n    const [mutationCensor] = useMutation(MediaCensorMutation,{\n        variables:{ input: { id: clientID , reason: reason}},\n        refetchQueries: [{ query: GET_USERS }]\n    });\n    const [mutationValid] = useMutation(MediaValidMutation,{\n        variables:{ input: { id: clientID , reason: reason}},\n        refetchQueries: [{ query: GET_USERS }], \n        onCompleted: () => {\n            setStatus('');\n        }\n    });\n\n    function handleChanges(value:string){\n        setReason('');\n        setStatus(value);\n    }\n\n    console.log('reason',reason);\n    return <div>\n        <p>{status}</p>\n        <input className=\"form-control\" type=\"text\" required value={reason} placeholder=\"Reason\" onChange={(e) => setReason(e.target.value)} aria-label=\"default input example\" />\n        {/* Use MutationButton with different mutations and text */}\n        <MutationButton mutationFunction={mutationCensor} buttonText=\"Censor\" handleChanges={handleChanges}/>\n        <MutationButton mutationFunction={mutationValid} buttonText=\"Valid\" handleChanges={handleChanges}/>\n        <DifferenButton refetch={refetch}/>\n    </div>\n}\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,SAASC,GAAG,EAAEC,WAAW,QAAQ,gBAAgB;AAMjD,MAAMC,mBAAmB,GAAGF,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMG,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASI,WAAWA,CAAC;EAACC,QAAQ;EAACC;AAAyB,CAAC,EAAE;EACtE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAEhD,MAAM,CAACc,cAAc,CAAC,GAAGV,WAAW,CAACC,mBAAmB,EAAC;IACrDU,SAAS,EAAC;MAAEC,KAAK,EAAE;QAAEC,EAAE,EAAET,QAAQ;QAAGI,MAAM,EAAEA;MAAM;IAAC,CAAC;IACpDM,cAAc,EAAE,CAAC;MAAEC,KAAK,EAAEpB;IAAU,CAAC;EACzC,CAAC,CAAC;EACF,MAAM,CAACqB,aAAa,CAAC,GAAGhB,WAAW,CAACE,kBAAkB,EAAC;IACnDS,SAAS,EAAC;MAAEC,KAAK,EAAE;QAAEC,EAAE,EAAET,QAAQ;QAAGI,MAAM,EAAEA;MAAM;IAAC,CAAC;IACpDM,cAAc,EAAE,CAAC;MAAEC,KAAK,EAAEpB;IAAU,CAAC,CAAC;IACtCsB,WAAW,EAAEA,CAAA,KAAM;MACfV,SAAS,CAAC,EAAE,CAAC;IACjB;EACJ,CAAC,CAAC;EAEF,SAASW,aAAaA,CAACC,KAAY,EAAC;IAChCV,SAAS,CAAC,EAAE,CAAC;IACbF,SAAS,CAACY,KAAK,CAAC;EACpB;EAEAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACb,MAAM,CAAC;EAC5B,oBAAOd,KAAA,CAAA4B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACHlC,KAAA,CAAA4B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAItB,MAAU,CAAC,eACfZ,KAAA,CAAA4B,aAAA;IAAOO,SAAS,EAAC,cAAc;IAACC,IAAI,EAAC,MAAM;IAACC,QAAQ;IAACZ,KAAK,EAAEX,MAAO;IAACwB,WAAW,EAAC,QAAQ;IAACC,QAAQ,EAAGC,CAAC,IAAKzB,SAAS,CAACyB,CAAC,CAACC,MAAM,CAAChB,KAAK,CAAE;IAAC,cAAW,uBAAuB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAE1KlC,KAAA,CAAA4B,aAAA,CAACzB,cAAc;IAACuC,gBAAgB,EAAE1B,cAAe;IAAC2B,UAAU,EAAC,QAAQ;IAACnB,aAAa,EAAEA,aAAc;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eACrGlC,KAAA,CAAA4B,aAAA,CAACzB,cAAc;IAACuC,gBAAgB,EAAEpB,aAAc;IAACqB,UAAU,EAAC,OAAO;IAACnB,aAAa,EAAEA,aAAc;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eACnGlC,KAAA,CAAA4B,aAAA,CAACxB,cAAc;IAACO,OAAO,EAAEA,OAAQ;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACjC,CAAC;AACV"},"metadata":{},"sourceType":"module"}